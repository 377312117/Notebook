osi 七层模型,tcp/ip 模型
tcp服务和udp 服务有什么异同
三次握手和四次挥手是什么,过程是怎么样的
什么是进程,进程和程序的区别
进程的状态能描述清,特征
进程都有那些状态,各种状态如何转换
线程间的资源争夺

多进程和多线程之间的区别和联系
    相同点
        两者都是多任务编程方式,都能够使用计算机的多核
        进程和线程都在系统中有子集的特有属性标志,如id,代码段,命令集等
    不同点
        1.进程的创建和消耗的计算机资源比线程要多
        2.进程空间独立,数据互不干扰,有专门的通信方法,
          而线程使用全局变量进行通信
        3.一个进程可以创建多个线程分支,两者为包含关系
        4.多个线程共用进程资源,在共享资源操作时往往需要同步互斥操作

多进程,多线程的使用场景
    用多线程:
        1.多个小任务组成一个任务用多线程,还有io高延迟的场景
        2.某个任务中并发比较多,此时多线程消耗资源较少
    用多进程
        1.不同的独立的任务模块,用多进程相对空间比较好管理
        2.在通信上要考虑可行性,如果数据逻辑比较复杂,
          需要同步互斥较多,用多线程可能容易出错,可合理使用多进程
        3.如果是无延迟的cpu密集型程序,使用多进程较好,因为线程的GIL锁问题

进程的通信都知道哪些,有什么特点
什么是同步互斥,你在什么情况下使用
给一个情形,分析是用进程还是线程,为什么

通过项目来了解工作流程
什么是项目?
    软件项目
        一个具有完整功能的代码集合
    接口(API)
        函数,类,模块都可能是接口,提供一定的功能的代码,通过获取数据返回相应的结果
    项目开发流程
        需求设计 -->   概要设计  --> 项目规划  --> 详细设计  -->
        编码测试 -->   项目测试  --> 项目发布  --> 后期维护
    需求分析
        确实能够用户真实需求,做项目评估
        1.确定真实需求,项目的基本功能
        2.对项目的整体进行评估(可行性,难度等)
        3.完成需求分析文档
    概要设计
        1.确定功能结构
        2.进行技术分析,构建整体框架图
        3.确定技术思路和实用技术
        4.完成概要设计文档,知道开发流程
    项目计划
        确定开发的时间轴和流程
        1.确定开发的先后顺序
        2.确定时间轴,里程碑事件
        3.人员的分工
        4.形成甘特图和思维导图,设定计划
    详细设计
        项目的具体实现手册
        1.详细记录项目的思路,逻辑,功能,技术点,代码说明,数据结构等
        2.行程详细设计文档
    编码测试
        按照计划编写功能代码,做基本测试
        1.写代码,测代码
        2.技术攻关
    项目测试
        对项目进行整体测试,调整修改
        1.做项目的各种功能和逻辑测试
        2.完成测试报告
        3.完成项目修改
    后期的维护
        1.bug修改
        2,产品的升级

项目注意事项
    *按照规定项目时间完成项目
    *项目中的人员和技术冲突

项目工具的推荐
    文档编写  word ppt excel markdown LaTex
    项目流程图  Mindmanager visio
    项目管理工具  project
    代码 git svn