第一章：linux系统
1.主流系统：
    windows、linux、unix
  1.1 linux内核(开发测试必用环境)：
       优点：
           安全稳定高效
       应用：
           安卓系统、电子词典、电视、ubuntu(当前教学,在项目中常用)、redflag红旗,redhat(红帽),诸多服务器
       特点：
           开源、免费、共享，自带python2.x    
  1.2 unix内核：
       优点：
           开源稳定高效,目前最高效的操作系统,无蓝屏问题
       应用：
           教学、企业应用(aix/ibm、惠普、sorlarios、icbc)、OS、Mac OS、大型银行的服务器。
2.计算机的组成
  2.1 硬件：
            CPU：中央处理器
            运行内存RAM：临时存放运行数据，（一旦断电，所有数据清除。）
	    主板：连接所有硬件设备，总线设备、数据运输中心.
	    输入、输出设备：显示屏、键盘、鼠标、以太网。
	    外部存储设备：硬盘、u盘、tf卡...（容量大，断电不会丢失数据）
  2.2 软件（程序）：
      1) 操作系统软件：
            windows/unix/linux/驱动程序等
	      操作系统都具有两个操作界面：
	         图形化界面：借助图形驱动程序
	         字符界面：  借助命令来驱动程序的执行
      2) 应用软件：
            如浏览器、微信、QQ等
3.一些定于以及虚拟机的使用
  3.1 虚拟机VMware以及终端的使用：
                      1.双击应用程序 VMware Workstation Pro
                      2.启动ubuntu16.04
                        密码:tarena
	                  快捷键:ctrl+alt 释放鼠标光标(可从虚拟机返回物理机)
	                         ctrl+alt+enter  全屏/退出全屏（切换）
  3.2 linux基本结构：从上至下，依赖下层
                  应用程序：调用标准库/内核,安装在操作系统之上的	    
                  标准库：操作系统的方式＋算法
	          linux内核：负责与硬件进行联系
	          硬件。
  3.3 开发：
           为别人提供工具。
  3.4 lmap:
         经典的全免费的开发环境
         l:linux
         m:mysql
         A:apache(中间件)
         p:php
         中小型电商网站：经典首选
  3.5 搭建开发环境：
         物理机：物理存在的主机
	 虚拟机：从物理机中分配一部分的硬件来组装一个主机
	         实际物理机主机需要高配置
4 常用单词：
     1)commad  命令
     2)log      日志文件
  a)对用户进行编辑和查看
     3)who     列出当前登陆用户的相关信息
                ls/home 可查看现在当前所有非root用户
     4)su     switch user   切换用户
	   延伸:{linux系统是一个多用户的系统}
	   超级管理员:root
	              只有root用户才拥有最高权限
           其他用户:非root
	              必须要授权之后才可以进行操作
           权限：r:read(可读)只能查看
	         w:weite(可写)可编辑，增删改
		 x:execute(可执行) 运行,打开
     5)adduser  添加用户
	        语法：useradd/adduser(皆可) 用户名
		1)必须具有root权限
		2)新添加用户为普通用户，权限有限制
		3)当添加完一个用户后，在/home目录自动生成该用户同名家目录，以及同组的组名
     6)passwd   设置密码
                语法：passwd 用户名
     7)deluser  删除用户
                语法：del 用户名
 b)对文件进行查看
     8)ls     list 列表，列出当前目录下的所有内容
     9)pwd    print work directory  列出当前用户所在的路径
     10)cd     change directory    切换工作目录，改变路径  
 c)对文件、文件夹进行编辑
     11)mkdir    make directory 新建目录
                 语法:mkdir 目录名1 目录名2
     12)rmdir    删除目录
     13)rm       remove  删除目录与文件
                  rm -rf   强制删除目录下所有目录
     14)mv       move   剪切（新旧不同目录且目录存在），对该目录重命名（目录不存在）
                语法:  mv 旧目录 新目录		       
     15)cp       copy   复制
     16)chmod    change  modloe  更改目录的用户权限
     17)touch   新建文件
                 语法:touch 文件名.后缀
	         不常用	         
 d)对文件进行查看
     18)cat   查看小文件的内容，一页可显示完
     19)more  查看大文件的内容，不可一页显示完，常用
               换行:回车键
	       翻页:空格键
	       退出：q
     20)less  查看大文件内容
     21)tail  查看文件后面的n行的内容
               eg:tail -5 查看文件后5行的内容
     22)head  查看文件前面的n行的内容
               eg：head -5 查看文件前5行的内容
  e)输出重定向：
     23).echo  含义:回声
              作用：将指定的内容输出到终端
	      格式：echo 内容
5. linux终端的使用：
  5.1 目的：
          对文件夹、文件、用户进行增删改查
  5.2 使用方法：
          借助shell命令来实现增删改查
  5.3 shell命令的格式：
          shell:外壳（控制界面、面板）
                介于用户和内核之间,
	        教学时使用终端terminal，工作时借助ssh
	    ssh:外部终端工具，连接服务器中的linux系统，
	        需配置网络，必须在同一网段，以便在个人电脑中对服务器进行维护
     格式:
          命令 [-选项][参数]  #中括号代表的是可缺省部分,可缺
	  command [option][parameters]
	    选项和参数位置不固定，但是一般来说按照此格式
	   示例: ls -lh /home
            命令：
                200多个，常用的20多个，存放在bin及sbin
	    选项：
	        由26个大小写字母组成，可相互组合
	          示例：ls -lh  long：长格式 且h：有单位（不可单独使用）
	    参数：
	        文件，目录(可以是多个参数)
  5.4 终端terminal使用方法:
       打开终端（任选其一）：
                           1.点击图标
                           2.搜索命令：gnome-terminal
       退出终端（任选其一）：
                           1.exit<回车> 
                           2.ctrl+d
       快捷方式：
             放大字体：Ctrl+Shift+"+"(退格键旁边那个键)
	     缩小字体：Ctrl+"-"
     1)提示符：  [tedu@localhost Desktop]$
                 1）tedu:用户名
	         2）localhost：主机名
                 3）Desktop:文件夹名
                 4）$:普通用户
	            #:超级用户	
     2)常用目录：
               1）/   根路径
               2）~   当前用户的家路径
	               不同用户的~代表的是不一样的家目录
	       3）.   当前路径
	       4）..  当前上一级路径（可重复使用，用/隔开，可返回多级）
     3)linux/unix路径分为：
              绝对路径：
	               唯一位置，详细到根文件夹开始，以'/'字符开头的路径为绝对路径
	                一个文件的绝对路径是惟一的
              相对路径：
	            相对于你当前位置
	                1)同目录路径
		           .html页面和图片都在同一个文件夹下,只填写文件名即可
		        2)子目录路径
		            当前路径下级路径
		        3)父目录路径
	                    当前路径上级路径，用..来表示   
     4)通配符：
        * 匹配0个或者多个任意字符
	    ? 匹配1个任意字符
          示例：
	  touch a ab ac abc aabb bc cd 
	  ls a? #匹配以a开头的只有两个字母的文件
	  ls a* #匹配以a开头的任意字母的文件
6. linux文件系统
       linux文件系统是以目录来划分,(windows文件系统以盘符来划分) 
         /bin    binary,包含了引导系统启动所需的命令和普通用户可以使用的常用命令
         /etc    用来存放所有的系统管理所需要的配置文件和子目录
         /dev    这个目录下是所有LINUX的外部设备文件
         /lib    是根文件系统目录下程序和核心模块的共享库          
         /       根目录
	 /home   存储用户及用户的家,尽量在home目录中操作编辑
	 /root   超级管理员的家
	 ...
7.shell命令的使用方法：
     1)ls 命令：
              显示文件夹或文件夹的内容
         格式：
	      ls [选项] [文件夹或文件名]
              空格：常用作分隔符存在
       常用选项：
           -l   long list 以长列表显示文件的详细信息
           -a   all 显示全部文件/文件夹 （包括隐藏文件）,隐藏文件是以.或者..开头的文件
            dr-xr-xr-x.   2 root root  4096 Aug 27 05:29 bin
          （文件显示 d是文件夹directory -是普通文件， 第一个：r读 w写 x可执行 拥有者用户权限 第二个：同组权限 
           第三个：其他用户权限 ，硬链接数，主人是谁，文件属于哪个组的，文件大小，创建修改时间,文件名 ）
           -s   列表显示所有文件
           -lh  显示长列表，附带单位，h不可单独使用
           -R   把当前目录的递归目录全部列出，就是下级目录全部列出  
     2)clear 命令
           作用：
	         清屏，不清除内容
           快捷键：
	         ctrl+l
     3)pwd 命令
           作用：
	        用于显示当前的工作路径位置（当前工作文件夹）
           示例：
	        $ pwd
                /home/tarena
     4)cd  命令
           作用：
               改变当前工作路径
           格式：
               cd [路径]
           示例：
               cd /home/tarena
               cd - #切换到进入这个文件夹之前的文件夹
               cd / #切换到根文件夹  
	       cd   #默认不写目录名相当于cd ~
     5)mkdir 命令:
           作用:
               创建一个或多个文件夹
           格式：
               mkdir 文件夹名1 文件夹名2 ...
           示例：
               mkdir a b c d
               mkdir a/bb/ccc/dddd     无上级文件夹无法创建下级文件夹
               mkdir -p a/bb/ccc/dddd  逐级全部创建
     6)rmdir 命令：
           作用：
               删除一个或多个文件夹（文件夹必须为空）
           格式：
               rmdir [选项] 文件夹名/下一级目录/下两级目录/下三级目录...
           常用选项：
              -p 如果中间文件夹不空，则逐级删除中间文件夹
     7)tree 命令：
           作用：
                显示目录树
           示例: 
                tree
                tree day01
     8)对文件的命令：
        touch 命令
            作用：
	          1：创建新的文件
                  2：如果文件已经存在，则更新文件的修改时间
	          3: *代表所有的文件
            格式：
	           touch 文件路径
            示例：
	           touch file1 file2 
     9)rm 命令
             作用：
                  删除文件或者文件夹(需加-r)
             格式：
                  rm[选项] 文件/文件夹（若不加后缀，下级有其他文件和文件夹则不可删除，加 -r则可删除）
             示例：
                  rm a.txt b.txt  #删除a,b的文档
                  rm *.txt        #删除目录下所有txt文件
	          rm -r a         #递归删除
		  rm -rf          #强制删除目录下所有目录
       常用选项：
             -r 递归删除文件夹内的文件和文件夹（按照相同的规则删里面的文件或文件夹）
             -i 删除前给出提示（y代表是，n代表不）
	     -f 强制删除，不给出任何提示
      操作带有特殊路径的方法
             用两个双引号（""）把路径括起来,比如包含字符以外的符号，
	     用双引号括起来，这样系统会认为是一个整体     
       示例:
            mkdir"a b"
            rmdir"a b"
     10)help 选项：
                 查看此命令的帮助信息,加上后缀后前面的命令不执行
            格式：
	         命令名 --help
            示例：
	         ls --help
     11)man 命令帮助
       格式： 
            man  linux/unix 命令名
       作用：
            查看命令所对应的帮助文档(手册)
       示例：
             man ls 
             man rm
       翻页：
             上下键
       退出：
             q键
     12)快捷键
       tab:  
           补全命令和路径
       上下键 :
             翻出以前的操作命令
     13)cat 命令
       作用：
            将文件内容作为标准输出打印(显示在)到终端上
       格式：
            cat 文件名1 文件名2
       例子：
            cat ../day01/day01.txt    
     14)more 命令
       作用：
            分页显示文本文件的内容
       格式：
            more文件名
       示例：
            more ../day01/day01.txt
       基本操作：
                  q     退出
                 空格  翻下一页
        ps:该命令和cat命令一样只可以查看文件。
     15)cp 命令
       作用：
            复制文件或者文件夹
       格式：
            cp [选项] 源文件或文件夹 目标文件或文件夹
       示例：
            cp ../day01/day01.txt ~/   
         # 以下是复制过程中改名，复制过程是可以改名的，复制的目标是一个文件夹会略过，
	    需要在前面加上“-a”才能全部复制    
     16)mv 命令
        作用：
	     文件搬移或者更名
	格式：
	     mv 源文件或者文件夹 目标文件或者文件夹
	示例：
	      mv passwd mypw #改名字
              mv passwd ~/  #移动文件    
     17)find 命令
        作用：
	     根据文件名信息查找指定文件
	格式：
	     find 路径 -name "文件名"
	示例：
	     # 查找用户主目录以下有哪些文件以.txt结尾
	     # find  ~ -name "*.txt"
     18)grep 命令
        作用：
	     查找文件中相应的内容以及文本信息
	格式：
	     grep "内容"[选项]文件名及路径
	常用选项：
	      -n   显示行号
	     -r/-R 递归搜索文件夹内的文件
	示例：
	      grep "文件" *.txt
	      grep "命令" -n *.txt  #显示行号
	      grep "root" -nr/etc
8.压缩解压命令：
   gzip 命令
        作用：
	     用zip压缩算法对文件进行压缩，生成压缩文件
	格式：
	    gzip 文件名
	   .gz 为用gzip压缩过的文件
   gunzip 命令
	作用：用gzip压缩过的文件进行解压
	   示例：cp /etc/password ~/
	            gzip ~/passwd
		    ls -l ~/passwd.gz
		    gunzip ~/passwd.gz
		    ls -l ~/passwd
      ps:有损压缩：无法还原
         无损还原：可完整还原
   tar 命令
        作用：对文件进行打包和解包作用
	格式：tar[选项]文件名[文件名和路径]
	常用选项：
	     -c         创建包
	     -x         解包
	     -v         显示操作细节
	     -z         用gzip/gunzip对包压缩和解压缩，.tar.gz
	     -f 文件名  正在操作的文件名,必有，后面接文件
	     -C 路径    改变解压缩路径（只对解包有效）
	     -j         bzip2压缩           .tar.bz2
	     -Z         Compress压缩
	     打包：
	         tar -czf 打包后的文件 被打包文件1 被打包文件2
		 tar -cf  
	     解包：
                 tar -xzf 被打包文件  解包后的文件
             压缩：
                 tar -czvf xxx.tar.gz  Linux/day01  #将xxx文件打包并压缩
		           压缩文件名  被压缩文件路径
	     解压：
	         tar -xzvf xxx.tar.gz       -C             Linux/day01  #将xxx压缩包解压并解包
		        压缩包文件名   改变解压路径(必要)   被解压文件路径
9.chmod:
         作用：修改权限
         使用权限 : 所有使用者 
         使用方式 : 方式1：chmod [ugoa][-cfvR] [--help] [--version] mode file... 
	            方式2：chmod 八进制数 目录
		     r的数字为4
		     w的数字为2
		     x的数字为1
		     三个值相加为对应其用户的权限，第一个用户为档案拥有者，第二个用户为组员，第三个为其他用户
		     示例1：chmod 111  :三组用户皆只有可执行权限
		            chmod 777  :三组用户皆有读写执行权限
			    chmod 644  :档案拥有者有读写权限，组员和其他用户拥有可读权限
                     示例2：chmod u=r,g-w 目录名/文件名 档案拥有者只有可读权限，同组用户去除可写权限
	 说明 : Linux/Unix 的档案调用权限分为三级 : 档案拥有者、群组、其他。利用 chmod 可以藉以控制档案如何被他人所调用。 
         参数 : 
              mode : 权限设定字串，格式如下 : [ugoa...][[+-=][rwxX]...][,...]，其中 
         用户: u 表示该档案的拥有者，g 表示与该档案的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。 
         权限：+ 表示增加权限、- 表示取消权限、= 表示唯一设定权限(只拥有该权限)。 
               r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该档案是个子目录或者该档案已经被设定过为可执行。 
               - 表示为失去对应权限
	      -c : 若该档案权限确实已经更改，才显示其更改动作 
              -f : 若该档案权限无法被更改也不要显示错误讯息 
              -v : 显示权限变更的详细资料 
              -R : 对目前目录下的所有档案与子目录进行相同的权限变更(即以递归的方式逐个变更) 
               --help : 显示辅助说明 
               --version : 显示版本 :
	     alias：取别名
      22)date:日期    
         cal:日历 
	     举例:cal 9 2018 :查询2018年9月的日历
      23)补全命令
             tab键
	     按一下：自动补全首字符是唯一的单词
	     按两下：首字符不唯一时，显示所有的作用域中所有的目录和文件
	     输入首字母时自动补全剩余的命令或者目录名或者文件名
10:vi   1)新建及编辑文件，编辑器的鼻祖，常用
           命令模式：   vi 1.py 从终端进入该模式
           文本模式：按a,i,o任意一键可开始编辑(左下角出现insert标识)
	          i:在光标前面输入
		  I:行首输入
		  a:在光标后面输入
		  A:行尾输入
		  o:换行输入
		  O：上一行输入
	2)退出输入模式：按esc，
	   末行模式：按esc退出编辑模式，"shift+:":进入末行模式
	   输入":wq" (左下角)回车后即可退出并保存
	   w：保存
	   q: 退出
	   !: 强制
	   三者可任意组合
	3)vim
           vim  vi的升级版，语法高亮，常用
11.输出重定向：
        echo  含义:回声
              作用：将指定的内容输出到终端
	      格式：echo 内容
	      例子:echo python  #终端返回 'python'
	           echo python > 1.txt
		   #将内容python覆盖添加到1.txt 中
        输出重定向 ：
	        作用:将内容(文本内容)重新输出到指定的方向
	           >(先清空文件内容，再添加)覆盖
		        >>(在文件末尾追加内容)追加
		            eg:  date > 1.txt 
		                #将日期信息输出到1.txt(以覆盖形式)	 
12.sudo 命令
    作用：
         用超级用户root权限来执行命令
    格式：
         sudo 命令 [选项] [参数]
    常用选项：
         -i 选项 切换到root用户
    如：
       sudo -i #进入到root用户
   
13.code  目录/文件名
        查看代码