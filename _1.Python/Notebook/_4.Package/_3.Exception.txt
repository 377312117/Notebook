异常(基础)  exception
1.错误的定义:
    错误是由于逻辑或语法错误导致一个程序无法正常执行的问题
2.什么是异常
    异常是程序出错是标识的一种状态
    当异常发生时,程序不会向下执行,而转去调用函数的地方待处理此错误并恢复为正常的状态
    作用:
        用作信号,通知上层调用者有错误产生需要处理
3.try语句
    两种语法:
        try-except 语句
            语法:
                try:
                    可能触发异常的语句
                execept 错误类型1[as 变量名1]:
                    异常处理语句1
                execept 错误类型2[as 变量名2]:
                    异常处理语句2
                execept 错误类型3[as 变量名3]:
                    异常处理语句3
                execept:                   #没类型可以匹配所有的错误类型
                    异常处理语句other
                else:
                    未发生异常语句
                finally:
                    最终语句(一定会执行)
            作用:
                尝试捕获异常通知,将程序由异常流程转为正常流程并继续执行
            说明:
                except 子句可以有一个或多个,但至少要有一个
        try-finally 语句
            语法:
                try:
                    可能触发异常的语句
                finally:
                    最终语句
            说明:
                finally子句不可省略
                一定不存在except子句
            作用:
                1.通常try-finally 语句用来做触发异常时必必须要处理的事情,无论异常是否发生,finally子句必须执行
                2.try-finally语句不会改变程序的(正常/异常状态)
            示例:
                _4.try-finally.py
4.raise语句
    作用:
        触发一个错误,让程序进入异常状态
        发送错误通知给调用者
    语法:
        raise 异常类型
        # 或
        raise 异常对象
        # 或
        raise #重新触发上一次异常
    示例:
        _5.raise.py
        _6.raise.py
        _7.exe-raise.py
5.assert 语句
    语法:
        assert 真值表达式,错误数据(通常是字符串)
    作用:
        当真值表达式为False时,用错误数据创建一个AssertionError类型的错误,并进入异常状态
    等同于:
        if bool(真值表达式) == False:
            raise AssertionError(错误数据)
    示例:
        _8.assert.py
6.小结
    异常处理相关的语句:
        try-except 语句
            作用:
                捕获异常通知,将程序由异常状态转为正常状态
        try-finally 语句
            作用:
                执行必须要执行的语句
        raise 语句
            作用:
                触发异常(抛出异常),让程序进入异常流程
        assert 语句
            作用:
                根据条件来触发AssertionError类的异常并进入异常流程

