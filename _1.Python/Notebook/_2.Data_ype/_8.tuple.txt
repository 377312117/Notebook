八．元组：tuple
1.基本介绍  
	特点：
        与列表类似，不同之处在于元组的元素不能修改，包括
        重新赋值，增加元素或者删除（*重要）但是可以进行拼接．
    表示方式：
        元组使用小括号，只要在括号中添加元素，用逗号隔开即可。
        tup＝(50,)   #单元素元组，须要在元素后添加逗号
    创造空元组的字面值：
        tup　=　()     #空元组
    创造非空元组：
	    例：tup1=("physics","chemistry",1997)
	    　　tup2=11,22,33,44
	    　　tup3="a","b","c","d","e","f","g","h"
	排序方式与字符串类似，
		　　tup1[0]      #为 "physics"
		　　tup3[1:4]    #为"b","c","d" 默认步长为1
        　　tup3[1:4:2]  #为"b","d" 设定步长为2
		　　#元组拼接
		　　tup1+tup2=("physics","chemistry",1997,11,22,33,44)
　　　　        ps:查看类型：　type()     #查看数据类型
    错误示范:
            a,b,c=(1,2,3)   #a,b,c都为整数型
2.常用函数
    1)构造函数
        tuple()  创建空元组 等同于()
        tuple(iterable) 用可迭代对象生成一个元组
        示例:
            t=tuple()
            t=tuple(range(1,10,2))
            t=tuple("ABC")     #返回 t=("A","B","C")
            t=tuple([1,2,3])   #返回 t=(1,2,3)
3.元组的计算
    + += * *=
    与其他序列,如字符串和列表函数类似,但是元组是不可变的,
    拼接后生成新元组有先后顺序关系,并创建为一个新的对象.
4.元组的比较规则
    与列表比较规则一致,比较远算符的优先级高于逗号,注意括号的使用
    类型不一致,顺序不一致无法比较
5.in / not in 运算符
    同列表一致
6.索引和切片
    用法等同于列表的操作,不支持索引和切片赋值
7.元组的方法
    T.count(value)
    T.index(value[,start,end])
8.元组的函数
    同列表一致
9.Tuple 和 list 应用场景的区别 
    1).Tuple 比 list 操作速度快。如果您定义了一个值的常量集，
      并且唯一要用它做的是不断地遍历它，请使用 tuple 代替 list。
    2).如果对不需要修改的数据进行 “写保护”，可以使代码更安全。
      使用 tuple 而不是 list 如同拥有一个隐含的assert 语句，
      说明这一数据是常量。如果必须要改变这些值，则需要执行 
      tuple 到 list 的转换 (需要使用一个特殊的函数)。
    3).Tuples 可以在 dictionary（字典，后面要讲述） 中被用做 key，
      但是 list 不行。Dictionary key 必须是不可变的。
      Tuple 本身是不可改变的，但是如果您有一个 list 的 tuple，
      那就认为是可变的了，用做 dictionary key 就是不安全的。
      只有字符串、整数或其它对 dictionary 安全的 tuple 
      才可以用作 dictionary key。
    4).Tuples 可以用在字符串格式化中。