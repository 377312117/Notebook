三、数字类型
   1..数字：1)整数：int 不带小数部分的数字，包括自然数，0，及负数
	     二进制表示方法：
	                    0b11111 
		             其中0b为前缀，在交互模式中输入返回结果为十进制，
		             因为计算机只能识别高低电平，所以只能识别二进制
             八进制表示方法：
	                     0o77777 
	     十六进制表示方法：
	                     0x,后接0-9，A-F，或小写a-f
             不同进制之间的计算：
                      八进制转二进制只需要从低位到高位顺序每3位分为一组 然后将每组的十进制数算出
                      再将所有十进制数按顺序拼接起来即可因为八进制数每一位的最大值为7 永远不会出现大于7的数字
                         eg:而4位二进制数的最大值也为7 最高位是0 所以可以使用3位二进制数算出1位八进制数
                            所以本题中二进制数1001 0010被分为3位一组的话结果是 010 010 010 
			    最高位的0是为了达到3位一组的效果而加上去的，也可以不加。
			    这样分组后每组对应的八进制数分别为2 2 2 所以八进制数就是222。
			    十六进制则是四位二进制换算一位
	  2)小数(浮点数)：float 带有小数部分的数字
	                          如：2.0   1.8等（只要有小数位就是浮点数，整数和浮点数运算后默认得浮点数）
		                  科学计数法：
				             小数 e/E(正负号)指数   E表示10
				  如：6.18E-1是6.18*(10^-1)的意思，结果为0.618
				      2.9979e8   #等同于299790000.0  结果为浮点数
			浮点数通常不做相等的比较，小数点后有精度的问题，因为十进制转换2进制的原因
	  3)复数：complex 分为两部分
		                   实部：(real)
				   虚部：(image)
				      虚部以j/J结尾
                                      字面值:1j,(2j),1+1j,3-4j,(-100+100j)
          4)布尔数：bool 
	       True:表示真(条件满足或成立)，值为1
	       bool("1")        #true
	      除了能代表0以外的数都输出为True
		           包括： bool(" ") 空格，也为true
		      False:表示假(条件不满足或不成立)，值为0
		           python里面能代表0的数字有：
		           0    0,0   ""(空字符串)
			   bool(0)      False
		           bool(0,0)    False
		           bool("")     False
         其他类型：空值 None 对象
		              none是表示不存在的特殊对象
			      作用：用来占位，用来变量解除绑定
			      在整个Python中none空值只有一个，都指向一个对象
   2.函数
     1.函数调用：
	      函数名(传参列表)
	         说明：函数调用是表达式，一定会返回一个对象的引用关系
         a.自定义函数
	 b.自带函数
	   1)input("提示字符串"):输入函数
	       作用：可设置友情提示语。可以为空
	             在标准输入设置上读取一个字符串(末尾的换行符会被删除)
	          ps:所有函数都有返回值，且该返回值为字符串
           2)print()：基本输出函数
	       作用：打印输出
	             将一系列的值以字符串形式输出到标准输出设置上（默认是终端）
	             输出的内容放在小括号里，各数据可以用","分隔开
	       eg: input("请输入：")
	           print(input("请输入："))
                   input(1,2,3,4)
	       过程：先执行input等待输入
	             输入完成后执行print
		     把输入的内容在打印
	       关键字参数：
	             sep  两个值之间的分隔符，默认为一个空格' '
		     sep  输出完毕后再字符流末尾自动追加一个字符串，默认为"\n"
                     file 文件流对象，默认为sys.stdout
		     flush 是否立即输出
           3)数据对象的构造函数
	      int() float()  complex() bool()
	      a. int(x,base=0)或int(x=0)作用： 
	               #base后面附带为进制，不给值默认为十进制，返回参数为十进制
	                   用数字或字符串转换为整数，如果不给出参数，则返回0
	                   该函数有返回值，该转化不会改变变量的原始类型
			     字符串不能与数字直接相加，哪怕字符串的内容为数字
			     需要将字符串利用int()等函数转化为数字
			eg:int(1.6)  #1
			   int("1001")  #1001 返回结果为整数
                           int("10.1")  #无法返回参数，报错
			   int("1a2b",16) #系统识别为16进制，返回结果为十进制,注意使用引号      
              b. float(obj) :用字符串或数字转换为浮点数，如果不能返回参数则返回0.0
	                eg:float(1)>>>1.0
			   float("123")>>>123.0  #字符串,用引号引起
			   float(True)>>>1.0     #首字母注意大写
                           float(False)>>>0.0    #首字母注意大写
			   计算时会存在精度问题，在精度上有所取舍返回值转化为十进制则会出现尾部不同的情况
                           整数部分永远是不会取舍的，python能保持小数位后１５位的精度，而Ｃ语言只有６位
	      c. complex(r=0.0,i=0.0)：用数字创建一个复数(实数为r,虚部为i)
	                eg:complex(1,2)>>> 1+2j
			   complex(0,0)>>> 0+0j
	      d. bool(x)  用x创建一个布尔值(True,False)	
	                eg:bool(13214)>>> True 
			   bool(0)>>>False 
			   #表示不存在的空集，False,，数字全为0的值都为假
			   比如：0,0.0 ，0+0j,False,None,""(空字符串)
			         []空列表,{}空字典,set()空集合,()空元组         
	   4)id() 函数
	           格式: id(对象)
		   作用：返回一个对象在内存的地址
		         地址相当于门牌号，意味着房子的位置
		     eg:a=5
		        id(a) #1683081008
	                 房子有多大取决于内存的大小，
			 如果a和b的地址相同，则a is b #True.
	    5)abs(x)  取x的绝对值
	    6)round(number,[ndigits])
	                   对数值进行四舍五入,ndigits（可有可无）是小数向右取整的位数，负数表示向左取整
            7)pow(x,y,z=None) 相当于x**y或x**y%z
	    8)>>>help() 函数可查看函数帮助文档
	          >>>help(函数名)
		  eg:help(abs)
   3.表达式和运算符：
      表达式 expression：
	 由一个数字或者数字的运算符组成
       作用：
	    让计算机做事情并返回结果
       示例：
             1+2      #创建生成一个3
    运算符a. + - * /  
	    除法：除法得到的数是浮点数，不会丢弃小数部分，如果无限循环的数，大概会留下16位精度
	  b.//整除 floordiv：
	           舍弃小数部分，向下取整得出整数值，浮点数被整除时得到浮点数末尾为0
		   eg:7//3     #2
		      7.0//3   #2.0
	  c.%求余：
	          得出余数，也叫取模
		  eg:7%3     #1
	  d.**次幂：
	          几次方
		  eg：2**6等同于2^6即2的6次方
	     运算符的优先级：括号,从里到外 >> ** >>* / // % >> + -
	         (1)括号分组子表达式
		      将()可以将表达式分组，()内的表达式优先计算
		 (2)混合类型自动升级： int >> float >> complex
		      1+2.14返回浮点数 3.14
		    ps：python运算符优先级在官网网站python.org上有。
          e.is与is not运算符
	     作用：1)判断两个对象是否绑定在同一个对象，如果是同一个对象返回True.
	           反之返回false.判断是不是同一个内存地址。
		     在交互模式中，两个对象虽然是同一个值，但是可能不是同一个对象，
		     如果分别赋值同一个值，那么是分别两个对象，而非同对象
		       eg1:a=b=1000
		         a is not b #False.
                       eg2:a=1000,
		         b=1000,
		         a is b    #False
	          2)小整数对象池
                    CPpython中整数-5~256
	            永远存在于小整数池中，不会释放并可重复使用。
	               eg1:a=5
	                   b=5
	                   a is b #True
		       因为这些数一直存储在池中永久存在且在内存中的地址固定，不会需要再重新创建，
		       所以返回结果是True，如果运算后得到的数仍然属于小整数池中，仍然返回结果是True，
		       因为python自动将值合并成一份，节约内存，重新创建数值会占用内存。
                         eg:在交互模式中上述的所有为正确的，但是在编辑脚本模式中，脚本会自动优化，将已
			 创建的数值重复引用，只进行了引用对象+1操作。
          f:复合赋值算术运算符
	     例：将x,y分别赋值
	          1)y+=x   等同于 y=y+x
		  2)y-=x   等同于 y=y-x
		  3)y*=x   等同于 y=y*x
		  4)y/=x   等同于 y=y/x
		  5)y//=x  等同于 y=y//x
		  6)y%=x   等同于 y=y%x
		  7)y**=x  等同于 y=y**x
          g:比较运算符
	      1)<   小于
		  2)<=  小于等于
		  3)>   大于
		  4)>=  大于等于
		  5)==  等于
		  6)!=  不等于
	        语法：左表达式<右表达式
		说明：比较运算符返回布尔型的值
		      优先级一致，计算从左到右
		      整数与浮点数可比较，但是他们不能和复数相比较
          h:逻辑运算符：
	           and:同时满足，否则返回False
	             and:x and y
		     注：x,y为表达式
		       作用：优先返回假值对象,当bool(x)的值为False，此时返回x,否则返回y
			  例：100 and 200,皆为真，返回y；
			      0.0 and 200.x为优先执行的项目，python能够直接输出对象，故返回值为0.0
                              100 and 100,返回的是后面的100;
			      False and True. 前值为False，返回前值；
		     or: 任一满足 x or y 
		       作用:优先返回真值对象
			   当x为true是返回x,否则返回y.
		         例：100 or 200 # 100 #x为True，返回x值 100,
			    False or True #前值为False，返回y值True;
			    100 or 100; #返回的值是前面的100，
		    not:取反,对x进行bool取值，若得False则返回True,反之亦然
		         eg:not 5>3 返回 False
			    not 100 #返回 False
			    not 0   #返回 True
			ps:在python中逻辑运算符非常的灵活，可以简化很多运算
          i:正负号运算符:'+' '-'号
	                和数学领域类似。
                        一元运算（只有一个元素参加运算）
			-号取反，+号对数字不起作用
         