数据库知识拓展
    数据存储阶段
        文件管理阶段(.txt,.doc,.xls)
            优点
                数据便于长期保存
                数据可以大量存储
                使用简单
            缺点
                数据的存储结构比较随意
                数据的查找修改效率低
                不方便扩展和程序调用
        数据库管理阶段
            优点
                数据的格式化存储便于操作
                降低了数据的冗余
                提高了增删改查的效率
                方便程序调用和扩展
            缺点
                使用上往往需要特定的语句或者操作，相对来说复杂一些
    一些概念
        数据
            能够输入到计算机中并被识别处理的信息集合
        数据结构
            研究一个数据集合，数据间关系的学科
        数据库
            按照数据结构，存储管理数据的仓库，数据库是在数据库管理系统
            管理和控制下再一定介质上存储的数据集合
        数据库管理系统
            数据库管理软件，用于维护数据库
        数据库系统
            由数据库和数据库管理系统等开发工具组成的集合
        关系型数据库
            采用关系模型来组织数据结构的数据库(二维表)
            如  Oracle Mysql DB2 SQLServer Sqlite
            优点
                容易理解，逻辑类似常见的表格
                使用方便，都是用sql语句进行数据操作，sql语句较为成熟
                数据的一致性高，冗余低，完整性好
                技术成熟，可以使用表关联等复杂操作
            缺点
                每次数据操作，都需要sql解析，消耗较大
                关系型数据库内部操作往往需要加锁，影响了处理速度
                不能很好的处理海量数据的高并发需求，读写能力差
                由于数据的一致性，灵活性不高
        非关系型数据库（Not Only Sql）
            优点
                并发能力强，读写速度快，可以应对海量数据并发需求
                普遍比较灵活，容易扩展，弱化了数据的一致性
            缺点
                通用性差，没有像sql一样的语句操作
                灵活性强会导致一定的操作混乱
                技术成熟度比关系型数据库要差
        Nosql使用情况
            1.对数据一致性较低
            2.应对数据高并发数据存储的可能性较大
            3.比较容易建立非关系型数据库模型
        Nosql分类
            1.键值存储数据量：Redis
            2.列存储数据库，HBase
            3.文档型数据库：Mongodb
            4.图形数据库

MongoDB数据库
        非关系型数据库
    特点
        由C++编写的数据库关系管理系统
        支持丰富的增删改查操作
        有丰富的存储类型，技术相对成熟
        支持众多的编程语言和操作
        使用方便，便于扩展和部署
    MongoDB安装
        Linux  
            命令语句
            sudo apt-get install mongodb 
            安装位置    /var/lib/mongodb
            配置文件    /etc/mongodb.conf
            命令集      /usr/bin
        手动安装
            1.www.mongodb.com  下载对应安装包
            2.将其解压到指定目录  /usr/local
            3.进入解压后的文件夹目录，里面的bin目录及命令集所在目录
            4.将这个目录（bin）加入环境变量即可
                将/opt/mongodb/bin加入环境变量，终端执行
                    PATH=$PATH：/opt/mongodb/bin
                    export PATH
                注：如果不想每次启动都执行则写入主目录的 .bashrc 中
        Macos
            下载homebrew
            命令： sudo brew install mongodb   
            (涉及到权限问题，如果/usr/local所有者为本人，则不需要root权限)
            初次启动时：
              >>  brew services start mongodb
              >>  mongo
    文档
        定义
            文档是由mongodb数据库的基本组成形式类似字典
            文档由键值对构成，每个键值对表达一个数据项
            mongodb文档属于bson类型数据
            文档中键值对是有序的
        键
            即文档的域，表达值是什么内容
            键的命名规则
                1.使用utf-8字符串
                2.不能使用\0
                3.一个文档中的键不能重复
        值
            即数据库存储的数据
            类型
                数字        整数   小数
                布尔类型     true  false
                Array       数组
                Date        日期时间
                timestamp   时间戳
                String      字符串
                Binary      二进制字符串
                Null        空 null
                Object      内部文档（对象）
                regex       正则表达式
                code        代码
                ObjectId    ObjectId字串
        类型
            ObjectId
                '_id' ：当插入mongodb文档时会自动生成_id域作为主键id
                        值：ObjectId数据，为了和其他的值不重复
                        24位16进制编码构成
                        包含8位的文档创建时间，6位的机器ID,4位进程id，6位计数器
                        *如果主动指定_id,则系统不会自动创建ObjectId类型数据
                        _id是不可重复的
        集合中的文档
                1.每个集合的文档格式可以不同
                2.一个集合存储的数据尽量体现相同的内容
                3.文档的表达层次尽量不要太多
MongoDB基本命令
    设置数据库的存储位置
        mongod  --dbpath 目录
            e.g mongod --dbpath database
    设置数据库连接端口
        mongod --port port
        如果不设置默认为27017
    启动mongodb 操作界面 mongo shell   ：mongo
        退出该界面  ctrl+c    或者quit()  或者exit
mongodb数据库结构
    键值对 -->>  文档  -->>  集合  -->>  数据库
    示例：关系型：
        ------------------------
        ID   |  NAME    | AGE
        ------------------------
        1    |  LILY    | 18    
        ------------------------
        非关系型：
        {
        '_id':1,
        'name':'LILY',
        'AGE':18
        },
mysql和mongodb区别

    Mysql           mongodb       含义
    database        database       数据库
    table           collection     表，集合
    column           field         字段，域
    row             document       记录，文档
    index           index          索引

数据库操作语句
    创建数据库
        use database
            eg: use stu
            实际是使用哪个数据库，当这个数据库不存在会自动创建这个数据库
            使用use创建数据库并不会马上建立，而是需要真正插入数据时才会产生
    查看系统中数据库
        show dbs 
    数据库命名规则
        1.使用utf-8字符
        2.不能含有 空格  .  /    \   '\0'  字符
        3.长度不超过64字节
        4.不能和系统数据库重名
    集合命名规则
        1.使用utf-8字符
        2.不能含有"\0"
        3.不要以.system开头，这是系统默认开头
        4.不要和关键字重复
    全局变量
        db ： 代表当前正在使用的数据库
            如果不选择任何数据库，db为test，use 库名后则代表指定数据库
    删除数据库（在mongo下）
	    db.dropDatabase()   删除db代表的数据库
    数据库的备份和恢复（在bash窗口下）
        备份
            mongodump -h dbhost -d dbname -o dir
                    主机       哪个数据库  备份到哪里
            示例
                mongodump -h 127.0.0.1 -d stu -o         .
                备份           本机中      stu数据库    到当前目录
        恢复
            mongorestore     -h      dbhost:port   -d dbname path 
                恢复            主机        端口        数据库   路径
            示例
                mongorestore -h 127.0.0.1:27017 -d stu ./stu
    数据库监控命令(在bash下)
        mongostat 实时查看数据库运行状态
            包含属性
            insert          每秒增的次数
            query           ...查
            update          ...改
            delete          ...删
            getmore 
            command         每秒执行mongo数据的次数
            dirty   
            used    
            flushes         和磁盘交互的情况
            vsize res       使用虚拟内存和物理内存的情况
            qrw arw net_in net_out conn                
            time            运行时间
        mongotop  检测每个数据库的数据表的读写情况
            ns          数据集合
            total       总时长
            read        读时长
            write       写时长
数据类型
    时间类型
    date 
        ISODate()   将指定的时间转换为MongoDB的时间格式
            参数:
                指定的时间
                    '2018-01-01 11:11:11'
                    '20180101 11:11:11'
                    '20180101'
            示例1:
                > db.book.insert({_id:1book:'入门',date:ISODate()})
                WriteResult({ "nInserted" : 1 })
                > db.book.find()
            返回 { "_id" :1, "book" : "入门", "date" : ISODate("2018-10-30T03:34:33.256Z") }
            示例2:
                db.class.insert({book:'python崩溃',date:ISODate('20180101 11:11:11')})
        Date()
            > db.book.insert({_id:1book:'入门',date:Date()})
            WriteResult({ "nInserted" : 1 })
            > db.book.find()
            返回 { "_id" :1, "book" : "入门", "date" : "Tue Oct 30 2018 11:37:27 GMT+0800 (CST)" }
        valueOf()
                将标准时间转换为时间戳
            示例
                记录当前标准时间的时间戳
                db.class.insert({book:'涅槃',date:ISODate().valueOf()})
    Null类型数据
        值:null
        表示某个域为空
            示例
                db.class.insert({book:'放生',price:null})
        表示某个域为不存在
            示例
                db.class0.find({gender:null},{_id:0})
    内部文档    Object
        文档中某个域的值还是一个文档,则这个文档为内部文档
        *当使用内部文档某个域的值时,需要用文档域.内部文档域的方法引用,此时需要加引号注明
        示例
            通过book.title查找
            db.class2.ind({"book.title":"狂人日记"},{_id=0})
            通过book.title修改
            db.class2.update({"book.title":"骆驼祥子"},{$push:{score:{$each:[],$sort:1}}})
    通过数组下标直接引用数组项

索引
    定义
        索引是建立文档所在位置的查找清单,使用索引可以方便进行快速查找,
        减少遍历次数,提高查找效率 
    索引约束
        1.索引本身也占有数据库空间,当数据量较小的时候,这种消耗是没有必要的
        2.索引表需要根据数据的修改及时修改,否则索引就会不和内容配套,也就失去的意义,
        如果数据库操作是频繁的修改操作而不是查找操作则不适合创建索引
    创建索引
        db.collection.createIndex()    创建索引
            参数    索引域和索引选项
                    db.class0.createIndex({name:1})
            *_id域会由系统自动创建索引
            *表示正向索引,-1表示逆向索引
    查看索引的集合
        db.collection.getIndexes()
        示例
            通过索引选项name给索引定义名称
            db.class.createIndex({age:1},{name:'ageIndex'})
        其他创建索引方法
            ensureIndex()
                功能    创建索引
                参数    同createIndex()
                示例
                    创建name和score两个域的键值对
                    db.class3.createIndex({[name:-1,score:1]})
        删除索引
            dropIndex()
                参数    索引域和索引选项
                示例
                    db.class.dropIndex({score:-1})
            dropIndexes()    删除所有索引,_id的索引不会被删除
                示例
                    db.class.dropIndexes()
        复合索引
            根据多个域创建一个索引
                示例
                    db.class.createIndex({name:1,age:-1})    
        子文档和数组索引
            如果对某个域创建索引,该域的值为数组或者子文档,则对数组中某一项或者子文档某个域
            的查找也为索引查找
            示例
                对book创建索引后,该查找也为索引查找
                db.class2.find("book.title":"围城")
        唯一索引
            要求创建索引的域不能有重复的值
            示例
                对name域创建唯一索引
                db,class,createIndex({name:1},{unique:true})
        稀疏索引
            会在创建索引时忽略没有指定域的文档
            示例
                对gender域创建稀疏索引
                db.class.createIndex({gender:1},{sparse:true})
固定集合
    指的是mongodb中创建的固定大小的集合,称之为固定集合
    特点
        能够淘汰早期数据,可以控制集合的大小
        插入,查找速度比较快
    使用
        日志处理,临时缓存
    创建
        db.createCollection(collection,{capped:true,size:10000,max:1000})
            capped : true       创建固定集合
            size   : 10000      固定集合大小
            max      1000       最多存放多少文档,超过之后会将之前存储的数据进行轮替
文件存储
    存储方式
        1,存储路径
                将本地文件所在的路径存储到数据库
            优点
                节省数据库空间
            缺点
                当数据库或者文件发生移动时必须要修改数据库的内容
        2,存储数据本身
                将文件转换为二进制存储到数据库
            优点
                文件随数据库移动,只要数据库在文件就在
            缺点
                占用数据库空间大,存储效率低
    GridFS存储方案
        目的:
            更好的存储MongoDB中超过16m的大文件
        方案解释
            在MongoDB数据库中创建两个集合存储文件内容,一个存储文件信息,
            一个存储文件内容.两者相互配合
            fs,files : 存储文件信息
            fs.chunks : 以mongodb二进制格式存储文件
        存储方法
            mongofiles -d dbname put file
            *数据库不存在会自动存在
            示例
                将img.jpg存储到grid
                mongofiles -d grid put ./img.jpg

        提取方法
            mongofiles -d grid get file
            *file目标文件为fs.files集合文档中filename的值
            示例
                将img.jpg下载到本地
                mongofiles -d grid get ./img.jpg
        优点
            存储方便,提供了较好的命令,方便数据库移动
        缺点
            读写效率较低,占用数据库空间大
    mongo shell 对JavaScript支持
        在mongo shell 下可以直接运行基本的js代码
        游标    获取数据库操作结果集合的量
            var cursor = db.class0.find()   获取游标
            cursor.next()   通过游标获取文档内容
            cursor.hadNext() 查看是否有下一个文档


