五、【对表中的数据进行多种查操作】  oracle 和 mysql 一致
  标准语句执行顺序
     select 内容 from 表名		 （3）
     where 条件				        （1）
     group by 列名			      （2）
     having 条件			        （4）
     order by 列名;			      （5）
     limit                    (6)
    127.0.0.1是本机环回地址,windows和linux一致,可代替本机地址
  完整示意见
          _2.exe_sanguo.sql
  1.【全查】：
	定义：
	    查询表中所有的数据
	关键字：
	    select * from
	*:  
	    所有列的所有数据
	格式：
	    select * from 表名;
      脚本模式：
	      将大量的sql语句写入到一个.sql中，然后批量执行
        在dos运行.sql
      步骤：	
	      1）连接到oracle
	      2）@.sql文件绝对路径
	案例：
      表中有列
        列：也可以称呼字段
	      emp：员工表
	      dept：部门表
  2.【部分查】
		*：所有列的所有数据
		    列名：部分列的所有数据
		*：	某一行的所有数据(where 条件)
		    列名：单元格的数据(where 条件)
	    定义1：
	        查询某几列下的所有数据(指定列查询)
	    关键字：
	        select from
	    格式1：
	        select 列名 from 表名;
	    格式2：
	        select 列名1,列名2,列名3 from 表名			
	    案例：
		      查询emp表中所有员工的姓名(ename)：
		        select ename from emp;
		      查询emp表中所有员工的编号和工资
		        select empno,sal from emp;
      用语文思维来分解语句
      语文：
	      主谓宾
	      主语：我们
	      谓语：select (动词)
	      宾语：是难点！！！
    1）查询某几行的所有数据(借助where条件)
	    关键字：
	       select  * from    where
	    格式：
	       select * from 表名 where 条件;				
	    案例：
        1)查询emp表中编号为7369的员工的所有信息
            select * from emp where empno=7369;
        2)查询emp表中工资大于1000的员工的所有信息
            select * from emp where sal>1000;
        3)查询emp表中工资在1000和2000之间的员工的所有信息
            select * from emp where sal between 1000 and 2000;		
        4)查询emp表中姓名为WARD、JAMES、KING的员工的所有信息
            select * from emp where ename in('WARD','JAMES','KING');
        5)查询emp中有奖金(comm)的员工的所有信息
            select * from emp where comm is not null;
    2）查询某几个单元格的数据(借助where条件)
			    （定位为，指定列）
	    关键字：
	       select from  where
	    格式：
	       select 列名 from 表名 where 条件;
			    (一行一列：一个单元格)
			    (多行一列：上下的多个单元格)
			    (一行多列：左右的多个单元格)
			    (多行多列：上下左右的多个单元格)
	    案例：
        1)查询emp表中工资为800的员工的岗位
          select job from emp where sal=800;
        2)查询emp表中工资大于2000的员工的姓名
          select ename from emp where sal>2000
        3)查询emp表中员工编号为7900的员工的姓名和入职日期
          select ename,hiredate from emp where empno=7900
        4)查询emp表中姓名中包含了字母'M'的员工的工资、岗位以及所在部门号
          select sal,job,deptno from emp where ename like '%M%';
  3.like  模糊查询
	  含义：借助关键字来查询
	    转义符：
		    1）%:0个或者n个字符(可有可无，可少可多)
		    2）_:有且只有一个字符
      注意:
        不可匹配NULL
        查库查表的时候也可以进行模糊查询
        查变量名时也可以进行模糊查询
          eg:
            show variables like 变量名
	    示例：
		    a    aa    abc    abac    bac    baba
		    以字母a开头：'a%'
		    以字母a结尾：'%a'
		    第二个字母为a：'_a%'
		    倒数第二个字母为a：'%a_'
		    包含字母a：'%a%'
		    第二个字母为a,且至少有三个字符：'_a_%'
		    倒数第二个字母为a,至少有4字符：'%__a_'
	    案例：
        1)查询emp表中岗位以字母M开头的所有员工的姓名
          select ename from emp where job like 'M%';
        2)查询emp表中姓名第二个字母为A,且至少有5个字符的员工的姓名.
          select ename from emp  where ename like '_a___%';
        3)查询emp表中每个岗位的最高薪资
          select max(sal) from emp group by job;
         3.1聚合函数：作为查询的结果。宾语
	        1）max():	求最大值   
	        2）min()：	求最小值
	        3）avg()：	求平均值
	        4）sum()：	求总和
	        5）count()：求个数 统计该字段记录的条数,空值不会被统计
      案例：
	      查询emp表中所有员工中的最高工资
	        select max(sal) from emp;
	      查询emp表中所有员工中的最低工资
	        select min(sal) from emp;
	      查询emp表中所有员工的平均工资
	        select avg(sal) from emp;
	      查询emp表中所有员工的工资总和
	        select sum(sal) from emp;
	      查询emp表中有多少个员工
	        select count(sal) from emp;
	      查询emp表中所有员工中的最高工资,最低工资,平均工资工资总和,员工个数;
	        select max(sal),min(sal),avg(sal),sum(sal),count(sal) from emp;   
  4.【分组查】：
	定  义：按照某个字段先分组，再来查询数据
	关键字：group by 列名
	格  式：select 列名,分组函数 from 表名 group by 列名;
    注意:
      group by 后面的字段必须是select后面的字段
      如果查询字和gruop by 不一致,则必须对该字段进行聚合处理(聚合函数)
	案  例：
           1)查询emp表中每个岗位的最高工资以及最低工资
                  谓语：select
                  宾语：max(sal),min(sal)
                  条件：无
                  分组：group  by job
                  排序：无
                 SELECT job,max(sal),min(sal) from emp group by job

           2)查询emp表中每个部门的最高工资与最低工资的差额
                 谓语：select
                 宾语：max(sal)-min(sal)
                 条件：无
                 分组：group  by deptno
                 排序：无
                   select deptno,max(sal)-min(sal) from emp group by deptno
           3)查询emp表中所有员工中工资最高的员工的姓名和工资
                 谓语：select
                 宾语：ename,sal
                 条件：where sal=(select max(sal) from emp)
                 分组：无
                 排序：无
                  select ename,sal from emp where sal=(select max(sal) from emp);
          4)查询emp表中每个部门的工资最高的员工的姓名和工资
                谓语：select
                宾语：ename,sal
                条件：where sal in(select max(sal) from emp group by deptno)
                分组：
                排序：无
                     select ename,sal from emp
                     where sal in(select max(sal) from emp group by deptno);
                案例5：
	                查询emp表中10号部门的每个岗位的员工的最高工资
                   谓语：select
                   宾语：max(sal)
                   条件：where deptno=10
                   分组：group by job
                   排序：无
                     select max(sal) from emp where deptno=10 group by job;
                案例6：
	              查询emp表中最低工资大于1000的部门的
	              员工的平均工资
                      select avg(sal) from emp
	              group by deptno
	              having min(sal)>1000
  5.【过滤】:
		含义：
		       对分组查询后的结果再进行过滤筛选，筛选的条件一定是分组函数的条件
		关键字：
		       having
                格式：
		      select 内容 from 表名
		      group by 列名
		      having 带分组函数的条件
		注意事项：
		      1）having语句后面接的是分组函数的条件
		      2）having语句不能单独存在,必须跟在group by后面
          3) where不能对聚合函数进行筛选,只能用having对聚合函数进行筛选
		案  例：
            1)查询emp表中最低工资大于1500的部门号
	            查询emp表中所有的部门号
	       select deptno from emp 最低工资大于1500的部门
             谓语：select
             宾语：deptno
             条件：min(sal)>1500
             分组：无
             排序：无
              select deptno from emp group by deptno having min(sal)>1500;
           2)查询emp表中平均工资大于2500的每个部门的部门号以及平均工资
             谓语：select
             宾语：deptno,avg(sal)
             条件：avg(sal)>2500
             分组：group by deptno
             排序：无
                select deptno,avg(sal) from empgroup by deptnohaving avg(sal)>2500;
           3)查询emp表中10号部门最低工资大于1000的每个岗位的岗位名称以及该岗位的最低工资
             谓语：select
             宾语：job,min(sal)
             条件：(1)、deptno=10 (2)、min(sal)>1000
             分组：group by job
             排序：无
               select job,min(sal) from emp where deptno=10group by jobhaving min(sal)>1000;
              ============SQL语句==================================
               select * from emp where sal=(select max(sql) from emp);
              =================================================
  6.【having 条件】：
            对分组聚合后的结果进一步筛选
    注意
          having 语句通常和gruop by 联合使用
          having 语句弥补了where 关键字不能和聚合函数联合使用的不足,where只能操作实际存在的字段,
          having 操作的是聚合函数生成的显示列
     单独接分组函数
      案例：
          查询emp表中最高工资大于3000的每个岗位的岗位名称以及最高工资
                谓语：select
                宾语：job,max(sal)
                条件：max(sal)>3000
                分组：group by job
          排序：
              ================sal语句===============================
               select job, max(sal) from emp group by job having max(sal)>3000;
              =====================================================
7.【排序查询】
		含义：
		     对最终查询得到的结果进行排序排序永远在最后执行
         order by
		分类：
		     1）降序
			关键字：desc
		     2）升序(默认值)
			关键字：asc
			（如果没有排序的关键字asc，也是升序）
		用法：
		    格式1：
			select 内容 from 表名 order by 列名 [desc\asc]
			select 内容 from 表名 
			           order by 列名1[升或降],列名2[升或降]
		    注意事项：
			1）order by语句可以单独存在，放在语句最后；
			2）既可以按照一个列的值排序， 也可以对多个列的值排序，中间使用逗号隔开；
			3）order by语句后面可以接分组函数的值
      4) 先满足第一个条件后,在对已经排列完毕的使用条件2排序
		案例：
      1.查询emp表中的入职日期,要求按照入职日期的先后顺序
        select hiredate from emp order by hiredate;
      2.查询emp表中每个员工的信息,按照工资从小到多排列
        select * from emp order by sal asc;
      3.查询emp表中每个员工的信息,按照工资升序排列，如果工资有相等,相等这部分数据再按照奖金comm进行降序排列
        select * from emp order by sal asc,comm desc;
      4.查询emp表中平均工资大于1500的每个部门的部门号以及平均工资,将查询结果按照平均工资降序排列
        谓语：select
        宾语：deptno,avg(sal)
        条件：avg(sal)>1500
        分组：group by deptno
        排序：order by avg(sal) desc
              select deptno,avg(sal) from emp group by deptno
              having avg(sal)>1500 order by avg(sal) desc;
8.limit 
        永远放在语句最后
        限制一下显示查询个数
      用法:
        limit n:      显示n条记录
        limit m,n:    从m+1条记录开始,显示n条
          eg:
            limit 2,3: 显示3,4,5 三条记录
      分页:
        eg:每页显示5(m)条记录,显示第四页(n)的记录
          limit 15,5
          limit (n-1)*m,m
   
9.拓展
        一些其他函数：
              时间函数：to_date()
              字符函数：to_char()
              数字函数：to_number(avg(sal),2)
        【对查询的结果取别名】
		    作用：
			        1)简写表名或者列名
			        2)在查询结果中以别名来显示
			        3)取别名，对原名没有任何影响
			        4)既可以给列取别名，也给表取别名  
		      方法：
		      	1）使用介词:as
		      		格式：列名1 as 别名,列名2 as 别名
		      	2）使用空格
		      		格式：列名1   别名,列名2   别名
		      案例：
              1)查询emp表中所有员工的ename列的值，以别名：姓名显示。
                select ename  as 姓名 from emp;			
              2)查询emp表中所有员工的姓名、工资、奖金分别以别名：姓名、工资、奖金来显示。
                select ename as 姓名,sal as 工资,comm as 奖金 from emp;   
              3)查询emp表中所有员工的最高工资、最低工资、平均工资、工资总和、员工数量
		      	   并使用空格来分别取别名：最高工资、最低工资、平均工资、工资总和、员工数量
                elect e.ename,d.dname from emp e,dept d where e.deptno=d.deptno;
        distinct: 不显示字段的重复值
              示例:
                  select distinct country from sanguo;
                  --sanguo表中有几个国家
                  select count(distinct country) from sanguo;
              注意:
                  distinct和from之间的所有字段都相同才会去重

    查询记录时做数学运算
10.运算符:  +  -  * / % 
      示例:
          见_2.exe_sangguo.sql
11.嵌套查询(子查询)
      定义:
          把内层的查询结果作为外层查询的条件
      语法:
          select .. from 表名 where 字段名 运算符 (select ...)
      示例:
          见_2.exe_sangguo.sql
          -- select name,gongji from sanguo where (country,gongji) in 
          (select country,max(gongji) from sanguo group by country);
          条件与子查询的查询结果一一对应
12.多表查询
      两种方式
          不加where条件
              select t1.name,t2.name from t1,t2;
          加where条件
              select 字段名列表 from 表1,表2 where 条件;
      示例:
          见_4.Province.sql
13.连接查询
      内连接
          语法:
              select ... from 表1 inner join 表2 on 条件 inner join 表3 on 条件;
          示例:
              见_4.Province.sql
      外连接
          左连接(left join)
              语法:
                  select ... from 表1 left join 表2 on 条件
              注意:
                  匹配不到的值以NULL填充,以左表为主
          右连接(right join)
              语法:
                  select ... from 表1 right join 表2 on 条件
              注意:
                  匹配不到的值以NULL填充,以右表为主

