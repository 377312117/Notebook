四.【对表中的数据进行增、删、改、查操作】
1：小知识
    a).name char(5)   缺点占内存，速度快    5个字节是固定：固定占内存的大小
     name varchar(50)   节省内存，速度慢   50个字节是可变;
	    最大的空间是50字节,但是所占内存是以实际数据的长度为准
  	b).数据库优化问题：
     软件运行速度慢：60%以上的原因在于数据库					
	   速度快：
		方式1：选择合适的数据类型
			tel number(11)
			tel char(11)
			gender char(3)
		方式2：增加适当索引：index
   	c).选中单行语句：Ctrl+insert
      执行单行语句：F9
      rollback：回退(只能撤销没有commit之后的操作)
      commit：提交(之前所有的操作写入到数据库中)
   	d).mysql:绝大部分公司
      开源:中小型
      oracle:大项目
      一条sql语句执行1千万条数据
      PLSQL:   循环语句
2.【增】：
	定义：从无到有的过程(空表--有数据的表)
			往表中插入数据
	关键字：insert into       values
			insert into：插入到？？？
			values：数据(多个数据，所以为复数)
	格式：insert into 表名 values('值1','值2','值3');
	示例：
			1）先创建一张a表：
				create table a(name char(10));
			2）往a表中插入以下数据：
				insert into a values('张三')
	分类：
		全部插入数据：
			指定表名没有指定列名
			给表中所有列都要赋一个值
			格式：insert into 表名 values('值1','值2','值3');
		部分插入数据：
			指定表名且也制定列名
			给所指定的列赋一个值,没有指定的列名不用赋值
			其默认的值为null
		格式：insert into 表名(列名1,列名2) values('值1','值2');
	小结：
		insert 语句插入的数据是以行为单位
		(每个insert语句插入的数据是最后另起一行来显示数据)
		数据的先后顺序是以insert语句执行的先后顺序来决定的
		在oracle中一条insert语句只能插入一条数据
		但mysql中一条insert语句可以插入多条数据
3.【改】：
	定义：修改表中的数据
			1）修改表中整列的所有数据
				不带where 条件
			2）修改表中某行的所有数据
			        带where 条件
			3）修改表中某个单元格的数据
				定位哪一行，以及指定那一列				
             带where 条件，指定某个列
       
    a)修改表中某列的所有数据
        关键字：
	       update   set
	格式1：
	       update  表名  set  列名= '新的值';
	格式2：
	       update  表名  set  列名1= '新的值',列名2='新的值';
	示例：
		修改a3表中性别这一列的值改为‘男’
		update a3 set 性别='男';
	案例：
		修改a3表中姓名这一列的值改为‘三丰’。
		update a3 set 姓名='三丰';
		修改a3表中编号和性别这二列的值分别改为1,女。
    b)修改表中某行的所有数据		
	思路：借助where条件来定位
        格式：update 表名 set 列名='新的值' where  条件
        where 条件：
	    1）该条件放在修改之后
	    2）条件的表现形式：
	       a.借助关系运算符来表达:
				>   >=    <     <=     =      !=       <>
			编号=2
			编号>2
			编号<>1
			性别='男'
			字符仅有: = !=
	       b.借助between  and  
			在2者之间(闭区间：包含边界)
			     where 编号 between 2 and 5     #2345
			等价于：
			    where 编号>=2 and 编号<=5
	       c.in  /  not in
			在某个指定范围内
			    where 编号 in(2,3,5)
			等价于：
			    where 编号=2 or 编号=3 or 编号=5
		   d.借助逻辑运算符：
			    and：并且，连接多个条件，必须同时成立
			    or：或者，连接多个条件，任何一个成立都行
			    not：取反，
					为空：is null
					非空：is not null
					where 姓名 is null
					where 姓名 is not null
					--空字符串""用 = != 匹配
        案例：
	    	1）修改a3表中编号为1所在行的姓名为张三，性别为男
	    	   update a3 set 姓名='张三',性别='男' where 编号=1;

	    	2）修改a3表中姓名为张三丰所在行的编号为2，性别为男
	    	   update a3 set 编号=2,性别='男' where 姓名='张三 丰';

	    	3）修改a3表中性别为女所在行的姓名为李四，编号为	4
	    	   update a3 set 姓名='李四',编号=4 where 性别='女';

	    	4）修改a3表中编号大于4所在行的姓名为张三，性别为男
	    	   update a3 set 姓名='张三',性别='男' where 编号>4;
	    	5）将张无忌改为张翠山
	    	   update A3 set 姓名='张翠山' where 姓名='张无忌';
	    	6）将张翠山删除掉
	    	   update a3 set 姓名='' where  姓名='张翠山';	
4.【删】：
	定义：删除表中的数据
	关键字：delete from
        {drop}：既删除表的结构，也删除表中数据
        {delete}：只删除表中的数据，结构还在。
	    分类：
		1）全删：删除表中所有行的数据
			格式： delete from 表名;
			示例：删除a3表中所有行的数据
					delete from A3;
		2）部分删：删除表中某几行的数据
			借助where 条件来定位
			格式：delete from 表名 where 条件
			示例：删除a3表中编号为1所在行的数据
					delete from A3 WHERE 编号=1;


